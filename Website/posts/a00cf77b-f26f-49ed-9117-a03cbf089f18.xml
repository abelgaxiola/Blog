<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Coding Standards in a Single Page</title>
  <slug>coding-standards-in-a-single-page</slug>
  <author>abelgaxiola</author>
  <pubDate>2016-10-14 05:41:59</pubDate>
  <lastModified>2016-10-14 05:46:51</lastModified>
  <excerpt>My idea of a short and simple coding standards that most of us can agree on</excerpt>
  <content>&lt;p class="MsoNormal"&gt;My idea of a short and simple coding standards that most of us (C# software developers) can agree on: &lt;/p&gt;&lt;p class="MsoNormal"&gt;&lt;b&gt;Methods:&lt;o:p&gt;&lt;/o:p&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Should be named using PascalCase.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Names should be verbs or verb phrases: RemoveAll(), GetMembers().&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Parameters should be named using camelCase.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;&lt;b&gt;Variables:&lt;o:p&gt;&lt;/o:p&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Should be named using PascalCase when the scope is outside a method.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Should be named using camelCase when the scope is within a method.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Do not use abbreviations. Use descriptive names.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Do not use Hungarian notation.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Use the &lt;b&gt;var&lt;/b&gt; type whenever possible.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;&lt;b&gt;Format:&lt;o:p&gt;&lt;/o:p&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Methods should be separated by a line-space.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Trim unnecessary spaces from the code. Most merge tools will flag files as being different due to spaces.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Do not commit code with commented-out sections of cod to source control.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Remove unused &lt;b&gt;using&lt;/b&gt; statements.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Remove unused variables.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Remove unused methods.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;&lt;b&gt;Classes:&lt;o:p&gt;&lt;/o:p&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Should be declared in their own file (one file per class).&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Methods and properties should be private unless they are to be accessed by an outside process.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;An attempt should be made to adhere to SOLID principles. Primarily the single responsibility principle.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Only classes that are actually used should be added to the project.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Business logic inside of classes should be unit tested for accuracy and to prevent the introduction of unforeseen/unexpected bugs during code refactoring.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;&lt;b&gt;Source Control:&lt;o:p&gt;&lt;/o:p&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Code commits should contain a comment that gives an overview of the change being committed.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Only code that builds and passes unit testing should be committed to the development branch.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;The master branch contains the most recent code changes that passed user acceptance and testing.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Bug fixes and other type of code modifications are done in a branch created from master.&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNormal"&gt;Tested and accepted code modifications are merged to the master branch and tagged using semantic versioning of Major.Minor.Patch increments.&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>Development</category>
    <category>Opinion</category>
  </categories>
  <comments></comments>
</post>